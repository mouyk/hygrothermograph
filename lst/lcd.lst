C51 COMPILER V9.60.0.0   LCD                                                               07/09/2023 21:11:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\output\lcd.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE source\lcd.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.\sour
                    -ce;.\include) DEBUG PRINT(.\lst\lcd.lst) TABS(2) OBJECT(.\output\lcd.obj)

line level    source

   1          
   2          #ifndef _LCD_C_
   3          #define _LCD_C_
   4          /*********************************************************************************************************
             -************/
   5          #include "include/ca51f_config.h"   
   6          #include "include/ca51f2sfr.h"
   7          #include "include/ca51f2xsfr.h"
   8          #include "include/gpiodef_f2.h"
   9          #include "include/system_clock.h"
  10          
  11          #include "include/uart.h"
  12          #include "include/lcd_led.h"
  13          #include "include/delay.h"
  14          #include "include/gxhtc.h"
  15          #include "include/disp.h"
  16          #include "include/key.h"
  17          #include "include/rtc.h"
  18          #include <intrins.h>
  19          /*********************************************************************************************************
             -************      
  20            本例程实现4com*9seg、1/3bias LCD显示功能，LCD时钟设置为XOSCL或IRCL，实现LCD最小电流模式。
  21            
  22            重要提示：
  23            在关闭LCD功能前，把所设置的COM脚和SEG脚设置为输出模式并输出低电平，可以避免关闭LCD功能时LCD屏出现拖影现象
             -。
  24          **********************************************************************************************************
             -***********/      
  25          void LCD_Off(void)
  26          {
  27   1        //在关闭LCD功能前，把所设置的COM脚和SEG脚设置为输出模式并输出低电平，可以避免关闭LCD功能时LCD屏出现拖影现
             -象。
  28   1        P00 = 0;
  29   1        P01 = 0;
  30   1        P02 = 0;
  31   1        P03 = 0;   
  32   1             
  33   1        P57 = 0;
  34   1        P34 = 0; 
  35   1        P35 = 0;  
  36   1        P56 = 0; 
  37   1        P50 = 0;
  38   1        P51 = 0;
  39   1        P52 = 0; 
  40   1        P53 = 0;
  41   1        P54 = 0;
  42   1        
  43   1        P00F = OUTPUT;
  44   1        P01F = OUTPUT;
  45   1        P02F = OUTPUT;
  46   1        P03F = OUTPUT;   
  47   1             
  48   1        P57F = OUTPUT;
  49   1        P34F = OUTPUT; 
C51 COMPILER V9.60.0.0   LCD                                                               07/09/2023 21:11:25 PAGE 2   

  50   1        P35F = OUTPUT;  
  51   1        P56F = OUTPUT; 
  52   1        P50F = OUTPUT;
  53   1        P51F = OUTPUT;
  54   1        P52F = OUTPUT; 
  55   1        P53F = OUTPUT;
  56   1        P54F = OUTPUT;
  57   1        
  58   1        LXCON = 0;            //关闭LCD功能
  59   1      }
  60          
  61          void Lcd_init(void)
  62          {
  63   1        unsigned char i;
  64   1        EA = 1;                         //开全局中断
  65   1      
  66   1      #ifdef PRINT_EN
  67   1        uart_printf("LCD Power Saving Mode Demo Code\n");
  68   1      #endif
  69   1      
  70   1          //初始化LCD驱动引脚
  71   1        P00F = P00_COM0_SETTING;
  72   1        P01F = P01_COM1_SETTING;
  73   1        P02F = P02_COM2_SETTING;
  74   1        P03F = P03_COM3_SETTING;   
  75   1             
  76   1        P57F = P57_SEG0_SETTING;
  77   1        P34F = P34_SEG1_SETTING; 
  78   1        P35F = P35_SEG2_SETTING;  
  79   1        P56F = P56_SEG3_SETTING; 
  80   1        P50F = P50_SEG4_SETTING;
  81   1        P51F = P51_SEG5_SETTING;
  82   1        P52F = P52_SEG6_SETTING; 
  83   1        P53F = P53_SEG7_SETTING;
  84   1        
  85   1        P54F = P54_SEG8_SETTING;
  86   1        P55F = P55_SEG9_SETTING;
  87   1        P60F = P60_SEG10_SETTING; 
  88   1        P61F = P61_SEG11_SETTING;
  89   1        P62F = P62_SEG12_SETTING;   
  90   1        P63F = P63_SEG13_SETTING; 
  91   1        P64F = P64_SEG14_SETTING; 
  92   1        P65F = P65_SEG15_SETTING; 
  93   1      
  94   1        P10F = P10_SEG16_SETTING; 
  95   1        P11F = P11_SEG17_SETTING; 
  96   1        P12F = P12_SEG18_SETTING; 
  97   1        P13F = P13_SEG19_SETTING; 
  98   1        P14F = P14_SEG20_SETTING; 
  99   1        P15F = P15_SEG21_SETTING; 
 100   1        P16F = P16_SEG22_SETTING; 
 101   1        P17F = P17_SEG23_SETTING; 
 102   1        
 103   1        P27F = P27_SEG24_SETTING; 
 104   1        P26F = P26_SEG25_SETTING; 
 105   1        P25F = P25_SEG26_SETTING; 
 106   1        P24F = P24_SEG27_SETTING; 
 107   1        P23F = P23_SEG28_SETTING; 
 108   1        P22F = P22_SEG29_SETTING; 
 109   1        P21F = P21_SEG30_SETTING; 
 110   1        P20F = P20_SEG31_SETTING; 
 111   1        
C51 COMPILER V9.60.0.0   LCD                                                               07/09/2023 21:11:25 PAGE 3   

 112   1        P07F = P07_LCD_SEG32_SETTING; 
 113   1        P06F = P06_LCD_SEG33_SETTING;
 114   1      
 115   1      
 116   1        //LCD RAM清零
 117   1        for(i = 0; i < 34; i++)
 118   1        {
 119   2          INDEX = i;
 120   2          LXDAT = 0;
 121   2        }
 122   1        
 123   1      //  P72F = P72_XOSCL_IN_SETTING;      //设置P72为晶振引脚
 124   1      //  P71F = P71_XOSCL_OUT_SETTING;     //设置P71为晶振引脚
 125   1      //  CKCON |= XLCKE;             //使能XSOCL
 126   1      //  while(!(CKCON & XLSTA));        //等待XSOCL稳定
 127   1        
 128   1      //  CKCON |= ILCKE;             //使能IRCL
 129   1      
 130   1        LXDIVH = 0;       //设置LCD时钟分频，目标帧频率为64HZ
 131   1        LXDIVL = 0; 
 132   1        LXCAD = 0;
 133   1        LXCFG =  DMOD(DMOD_80ua) | BIAS(BIAS_1_3) | LDRV(LDRV_7);     //设置LCD驱动电流、偏压(bias)、辉度
 134   1        LXCON =  LEN(LEN_XOSCL) | LMOD(LMOD_lcd);             //设置LCD时钟源为XOSCL，选择LCD模式
 135   1      //  LXCON =  LEN(LEN_IRCL) | LMOD(LMOD_lcd);              //设置LCD时钟源为IRCL，选择LCD模式
 136   1        
 137   1        //设置LCD全显
 138   1        for(i = 0; i < 34; i++)
 139   1        {
 140   2          INDEX = i;
 141   2          LXDAT = 0x0F;
 142   2        }
 143   1      
 144   1      //  LCD_Off();
 145   1        
 146   1        I2CCON = 0;           //关闭I2C，否则系统时钟无法关闭
 147   1        CKCON = XLCKE;          //关闭除LCD时钟外的其他时钟
 148   1      //  CKCON = ILCKE;  
 149   1        PWCON &= ~0x08;         //LDO进入低功率模式
 150   1        
 151   1        PCON = (PCON&0x84) | 0x02;      //进入STOP模式
 152   1        _nop_();
 153   1      
 154   1      }
 155          void Lcd_Humiture(void)
 156          {
 157   1        extern uint8_t lcd_ram[34];
 158   1        uint16_t lcdtemp=0,lcdhumi=0;
 159   1        
 160   1        lcdtemp=GXHTC3_temp*10;
 161   1        lcdhumi=GXHTC3_humi;
 162   1        UpdateNixieTubeRAMB(lcdtemp/100,27);
 163   1        UpdateNixieTubeRAMB(lcdtemp%100/10,25); 
 164   1        UpdateNixieTubeRAMB(lcdtemp%100%10,23); 
 165   1        UpdateNixieTubeRAMA(lcdhumi/10,19);
 166   1        UpdateNixieTubeRAMA(lcdhumi%10,21); 
 167   1        if(FahrenFlag == 0)
 168   1        {
 169   2          lcd_ram[30] = C_Tmp;
 170   2        }
 171   1        else
 172   1        {
 173   2          lcd_ram[30] =F_Tmp;
C51 COMPILER V9.60.0.0   LCD                                                               07/09/2023 21:11:25 PAGE 4   

 174   2        }
 175   1        lcd_ram[25] |= 0x01;     //.
 176   1        lcd_ram[23] |= 0x01;      //温湿度标
 177   1        lcd_ram[22] |= 0x01;     //%
 178   1        if((GXHTC3_humi>=40)&&(GXHTC3_humi<=70))    //湿度笑脸
 179   1          lcd_ram[20] |=smile_Humi;
 180   1        if((GXHTC3_temp>=-10)&&(GXHTC3_temp<=50))    //温度笑脸
 181   1          lcd_ram[29] |=smile_Temp;
 182   1        if(GXHTC3_temp<0)
 183   1          lcd_ram[29] |=negative;                    //负号
 184   1      }
 185          void Lcd_Colon(uint8_t flag)
 186          {
 187   1        static uint8_t a = 0;
 188   1        if(flag == 1)
 189   1        {
 190   2          if(a == 0)
 191   2          {
 192   3            lcd_ram[4] |= 0x01;
 193   3            a = 1;
 194   3          }
 195   2          else
 196   2          {
 197   3            a = 0;
 198   3          }
 199   2        }
 200   1        else
 201   1        {
 202   2          lcd_ram[4] |= 0x01;
 203   2        }
 204   1      }
 205          void Lcd_IconFunction(void)
 206          {
 207   1        lcd_ram[32] = SOC3;
 208   1      }
 209          void Lcd_WeekDisplay(uint8_t num)
 210          {
 211   1        if(num == 1)
 212   1          lcd_ram[18] = Monday;
 213   1        else if(num == 2)
 214   1          lcd_ram[18] = Tuesday;
 215   1        else if(num == 3)
 216   1          lcd_ram[18] = wednesday;
 217   1        else if(num == 0)
 218   1          lcd_ram[18] = Sunday;
 219   1        if(num == 4)
 220   1          lcd_ram[17] |= thursday;
 221   1        if(num == 5)
 222   1          lcd_ram[8] |= friday;
 223   1        if(num == 6)
 224   1          lcd_ram[27] |= Saturday;
 225   1      }
 226          void Lcd_DateFunction(uint16_t year, uint8_t month,uint8_t day)
 227          {
 228   1        uint8_t week = 0;
 229   1        UpdateNixieTubeRAMA((year-2000)/10,9);
 230   1        UpdateNixieTubeRAMA((year-2000)%10,11);
 231   1        UpdateNixieTubeRAMA(month%10,13); 
 232   1        if(month>=10) 
 233   1          lcd_ram[14] |= month1;  
 234   1        if((day>=10)&&(day<20))
 235   1          lcd_ram[15] = 0x0C;
C51 COMPILER V9.60.0.0   LCD                                                               07/09/2023 21:11:25 PAGE 5   

 236   1        else if((day>=20)&&(day<30))
 237   1          lcd_ram[15] = 0x07;
 238   1        else if(day>=30)
 239   1          lcd_ram[15] = 0X0E;
 240   1        UpdateNixieTubeRAMA(day%10,16);   
 241   1        lcd_ram[10] |=0x01;
 242   1        week = RTC_Set_Week(year,month,day);
 243   1        Lcd_WeekDisplay(week);
 244   1      }
 245          #endif
*** WARNING C316 IN LINE 245 OF source\lcd.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1087    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =      1       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
