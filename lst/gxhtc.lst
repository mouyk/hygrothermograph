C51 COMPILER V9.60.0.0   GXHTC                                                             07/09/2023 08:22:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE GXHTC
OBJECT MODULE PLACED IN .\output\gxhtc.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE source\gxhtc.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.\so
                    -urce;.\include) DEBUG PRINT(.\lst\gxhtc.lst) TABS(2) OBJECT(.\output\gxhtc.obj)

line level    source

   1          #ifndef _GXHTC3_C_
   2          #define _GXHTC3_C_
   3          #include "include/ca51f_config.h"   
   4          #include "include/ca51f2sfr.h"
   5          #include "include/ca51f2xsfr.h"
   6          #include "include/gpiodef_f2.h"
   7          #include "include/system_clock.h"
   8          
   9          #include "include/uart.h"
  10          #include "include/lcd_led.h"
  11          #include "include/delay.h"
  12          //#include "include/lcd.h"
  13          #include "include/gpio.h"
  14          #include "include/gxhtc.h"
  15          #include <intrins.h>
  16          #include "stdio.h"
  17          #include "include/disp.h"
  18          
  19          #define write 0
  20          #define read  1
  21          float GXHTC3_temp,GXHTC3_humi,GXHTC3_Temperature,GXHTC3_Humidity;
  22          
  23          /****************************************************************************
  24          * Function Name  : GXHTC3_INIT
  25          * Description    : 初始化GPIO.
  26          * Input          : None
  27          * Output         : None
  28          * Return         : None
  29          ****************************************************************************/
  30          void GXHTC3_INIT()
  31          { 
  32   1        P36F = OUTPUT;//|OP_EN;
  33   1        P37F = OUTPUT;//|OP_EN;   
  34   1      
  35   1        GXHTC3_SCL_H;
  36   1        GXHTC3_SDA_H;
  37   1      }
  38          
  39          /*******************************************************************************
  40          * 函 数 名         : GXHTC3_SDA_OUT
  41          * 函数功能       : SDA输出配置     
  42          * 输    入         : 无
  43          * 输    出         : 无
  44          *******************************************************************************/
  45          void GXHTC3_SDA_OUT()
  46          {
  47   1        P36F = OUTPUT|OP_EN;
  48   1        //P37F = OUTPUT|OP_EN;    
  49   1      }
  50          
  51          /*******************************************************************************
  52          * 函 数 名         : GXHTC3_SDA_IN
  53          * 函数功能       : SDA输入配置     
  54          * 输    入         : 无
C51 COMPILER V9.60.0.0   GXHTC                                                             07/09/2023 08:22:20 PAGE 2   

  55          * 输    出         : 无
  56          *******************************************************************************/
  57          
  58          void GXHTC3_SDA_IN(void)
  59          {
  60   1        P36F = INPUT; 
  61   1      }
  62          
  63          //void GXHTC3_SDA_in(void)
  64          //{
  65          //  P36F = INPUT;   
  66          //}
  67          //产生起始信号
  68          void GXHTC3_StarT(void)
  69          {
  70   1        GXHTC3_SDA_OUT();
  71   1        
  72   1        GXHTC3_SDA_H;
  73   1        GXHTC3_SCL_H;
  74   1        delay_us(5);
  75   1        GXHTC3_SDA_L;
  76   1        delay_us(6);
  77   1        GXHTC3_SCL_L;
  78   1      }
  79          
  80          //产生停止信号
  81          void GXHTC3_StoP(void)
  82          {
  83   1         GXHTC3_SDA_OUT();
  84   1      
  85   1         GXHTC3_SCL_L;
  86   1         GXHTC3_SDA_L;
  87   1         GXHTC3_SCL_H;
  88   1         delay_us(6);
  89   1         GXHTC3_SDA_H;
  90   1         delay_us(6);
  91   1      }
  92          
  93          //主机产生应答信号ACK
  94          void GXHTC3_Ack(void)
  95          {
  96   1         GXHTC3_SCL_L;
  97   1         GXHTC3_SDA_OUT();
  98   1         GXHTC3_SDA_L;
  99   1         delay_us(2);
 100   1         GXHTC3_SCL_H;
 101   1         delay_us(5);
 102   1         GXHTC3_SCL_L;
 103   1      }
 104          
 105          //主机不产生应答信号NACK
 106          void GXHTC3_NAck(void)
 107          {
 108   1         GXHTC3_SCL_L;
 109   1         GXHTC3_SDA_OUT();
 110   1         GXHTC3_SDA_H;
 111   1         delay_us(2);
 112   1         GXHTC3_SCL_H;
 113   1         delay_us(5);
 114   1         GXHTC3_SCL_L;
 115   1      }
 116          //等待从机应答信号
C51 COMPILER V9.60.0.0   GXHTC                                                             07/09/2023 08:22:20 PAGE 3   

 117          //返回值：1 接收应答失败
 118          //        0 接收应答成功
 119          uint8_t GXHTC3_Wait_Ack(void)
 120          {
 121   1        uint8_t tempTime=0;
 122   1        GXHTC3_SDA_IN();
 123   1        GXHTC3_SDA_H;
 124   1        delay_us(1);
 125   1        GXHTC3_SCL_H;
 126   1        delay_us(1);
 127   1      
 128   1        while(P36)
 129   1        {
 130   2          tempTime++;
 131   2          delay_us(1);
 132   2          if(tempTime>250)
 133   2          {
 134   3            GXHTC3_StoP();
 135   3            return 1;
 136   3          }  
 137   2        }
 138   1        GXHTC3_SCL_L;
 139   1        delay_us(1);
 140   1        return 0;
 141   1      }
 142          //GXHTC3 发送一个字节
 143          void GXHTC3_Send_Byte(uint8_t txd)
 144          {
 145   1        uint8_t i=0;
 146   1        GXHTC3_SDA_OUT();
 147   1        GXHTC3_SCL_L;//拉低时钟开始数据传输
 148   1      
 149   1        for(i=0;i<8;i++)
 150   1        {
 151   2          if((txd&0x80)>0) //0x80  1000 0000
 152   2            GXHTC3_SDA_H;
 153   2          else
 154   2            GXHTC3_SDA_L;
 155   2      
 156   2          txd<<=1;
 157   2          delay_us(1);
 158   2          GXHTC3_SCL_H;
 159   2          delay_us(2); //发送数据
 160   2          GXHTC3_SCL_L;
 161   2          delay_us(2);
 162   2        }
 163   1      }
 164          
 165          //GXHTC3 读取一个字节
 166          
 167          uint8_t GXHTC3_Read_Byte(uint8_t ack)
 168          {
 169   1         uint8_t i=0,receive=0;
 170   1      
 171   1         GXHTC3_SDA_IN();
 172   1         for(i=0;i<8;i++)
 173   1         {
 174   2            GXHTC3_SCL_L;
 175   2          delay_us(2);
 176   2          GXHTC3_SCL_H;
 177   2          while(!P37);
 178   2          receive<<=1;
C51 COMPILER V9.60.0.0   GXHTC                                                             07/09/2023 08:22:20 PAGE 4   

 179   2          if(P36)
 180   2             receive++;
 181   2          delay_us(1);  
 182   2         }
 183   1      
 184   1          if(ack==0)
 185   1            GXHTC3_NAck();
 186   1        else
 187   1          GXHTC3_Ack();
 188   1      
 189   1        return receive;
 190   1      }
 191          
 192          
 193          void GXHTC3_read_result(uint8_t addr)
 194          {
 195   1        uint16_t tem,hum;
 196   1        uint16_t buff[6];
 197   1      
 198   1        float Temperature=0;
 199   1        float Humidity=0;
 200   1          
 201   1        GXHTC3_StarT();
 202   1        GXHTC3_Send_Byte(addr<<1 | write);//写7位GXHTC3设备地址加0作为写取位,1为读取位
 203   1        GXHTC3_Wait_Ack();
 204   1        GXHTC3_Send_Byte(0x7C);
 205   1        GXHTC3_Wait_Ack();
 206   1        GXHTC3_Send_Byte(0xA2);
 207   1        GXHTC3_Wait_Ack();
 208   1        GXHTC3_StoP();
 209   1        
 210   1        Delay_ms(15);
 211   1        
 212   1        GXHTC3_StarT();
 213   1        GXHTC3_Send_Byte(addr<<1 | read);//写7位GXHTC3设备地址加0作为写取位,1为读取位
 214   1        
 215   1        if(GXHTC3_Wait_Ack()==0)
 216   1        {
 217   2          GXHTC3_SDA_IN();
 218   2            
 219   2          buff[0]=GXHTC3_Read_Byte(1);
 220   2          buff[1]=GXHTC3_Read_Byte(1);
 221   2          buff[2]=GXHTC3_Read_Byte(1);
 222   2          buff[3]=GXHTC3_Read_Byte(1);
 223   2          buff[4]=GXHTC3_Read_Byte(1);
 224   2          buff[5]=GXHTC3_Read_Byte(0);
 225   2          GXHTC3_StoP();
 226   2          
 227   2          tem = ((buff[0]<<8) | buff[1]);//温度拼接
 228   2          hum = ((buff[3]<<8) | buff[4]);//湿度拼接
 229   2          /*转换实际温度*/
 230   2          Temperature= (175.0*(float)tem/65535.0-45.0) ;// T = -45 + 175 * tem / (2^16-1)
 231   2          Humidity= (100.0*(float)hum/65535.0);// RH = hum*100 / (2^16-1)
 232   2        }
 233   1        
 234   1        if((Temperature>=-20)&&(Temperature<=125)&&(Humidity>=0)&&(Humidity<=100))//过滤错误数据
 235   1        {
 236   2          GXHTC3_temp = Temperature;
 237   2          GXHTC3_humi = Humidity;
 238   2        }
 239   1      
 240   1        tem = 0;
C51 COMPILER V9.60.0.0   GXHTC                                                             07/09/2023 08:22:20 PAGE 5   

 241   1        hum = 0;
 242   1      }
 243          
 244          void al_float_buffer_sort(float *buf, uint8_t length)
 245          {
 246   1        uint8_t i, j;
 247   1        float tmp;
 248   1        for (i = 0; i < length; i++)
 249   1        {
 250   2          for (j = i + 1; j < length; j++)
 251   2          {
 252   3            if (buf[j] < buf[i])
 253   3            {
 254   4              tmp = buf[j];
 255   4              buf[j] = buf[i];
 256   4              buf[i] = tmp;
 257   4            }
 258   3          }
 259   2        }
 260   1      }
 261          
 262          void get_gxth30(void)
 263          {
 264   1      /* 加滤波
 265   1        float buff_temp[5]={0,0,0,0,0},buff_humi[5]={0,0,0,0,0};
 266   1        uint8_t i=0;
 267   1        for(i = 0;i < 5;i++)
 268   1        { 
 269   1          GXHTC3_read_result(0x70);
 270   1          buff_temp[i] = GXHTC3_temp;
 271   1          buff_humi[i] = GXHTC3_humi;
 272   1        }
 273   1        
 274   1        al_float_buffer_sort(buff_temp,5);
 275   1        al_float_buffer_sort(buff_humi,5);
 276   1        
 277   1        GXHTC3_Temperature = (buff_temp[2] + buff_temp[4]) / 2;
 278   1        GXHTC3_Humidity = (buff_humi[2] + buff_humi[4]) / 2;
 279   1        
 280   1        uart_printf("Temp=%f ||| Humi=%f /n",GXHTC3_temp,GXHTC3_humi);
 281   1      */
 282   1        
 283   1      ///* 不加滤波
 284   1      
 285   1        float temp=0,humi=0;
 286   1        uint8_t i = 0;
 287   1      //  extern  uint8_t                 lcd_ram[34];  
 288   1        for(i = 0;i < 5;i++)
 289   1        { 
 290   2          GXHTC3_read_result(0x70);
 291   2          temp+=GXHTC3_temp;
 292   2          humi+=GXHTC3_humi;
 293   2        }
 294   1        
 295   1        GXHTC3_temp = temp / 5;
 296   1        GXHTC3_humi = humi / 5;
 297   1        uart_printf("Temp=%0.2f ||| Humi=%0.2f \n",GXHTC3_temp,GXHTC3_humi);
 298   1        
 299   1      //*/  
 300   1        
 301   1      }
 302          
C51 COMPILER V9.60.0.0   GXHTC                                                             07/09/2023 08:22:20 PAGE 6   

 303          
 304          #endif
*** WARNING C316 IN LINE 304 OF source\gxhtc.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1300    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =     16      50
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
