C51 COMPILER V9.60.0.0   MAIN                                                              07/11/2023 21:13:54 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\output\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE source\main.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.\sou
                    -rce;.\include) DEBUG PRINT(.\lst\main.lst) TABS(2) OBJECT(.\output\main.obj)

line level    source

   1          
   2          #ifndef _MAIN_C_
   3          #define _MAIN_C_
   4          /*********************************************************************************************************
             -************/
   5          #include "include/ca51f_config.h"   
   6          #include "include/ca51f2sfr.h"
   7          #include "include/ca51f2xsfr.h"
   8          #include "include/gpiodef_f2.h"
   9          #include "include/system_clock.h"
  10          
  11          #include "include/uart.h"
  12          #include "include/lcd_led.h"
  13          #include "include/delay.h"
  14          //#include "include/lcd.h"
  15          #include "include/key.h"
  16          #include "include/gpio.h"
  17          #include "include/gxhtc.h"
  18          #include "include/rtc.h"
  19          #include <intrins.h>
  20          #include "include/pwm.h"
  21          #include "include/adc.h"
  22          #include "mcu_sdk/zigbee.h"
  23          #include "include/disp.h"
  24          /*********************************************************************************************************
             -************      
  25            本例程实现4com*9seg、1/3bias LCD显示功能，LCD时钟设置为XOSCL或IRCL，实现LCD最小电流模式。
  26            
  27            重要提示：
  28            在关闭LCD功能前，把所设置的COM脚和SEG脚设置为输出模式并输出低电平，可以避免关闭LCD功能时LCD屏出现拖影现象
             -。
  29          **********************************************************************************************************
             -***********/      
  30          extern uint8_t key_value;
  31          
  32          void main(void)
  33          {
  34   1      extern float GXHTC3_temp,GXHTC3_humi;
  35   1      extern bit HalfSecFlag;
  36   1      extern bit AlarmEvFlag;
  37   1      extern bit millisecondFlag;
  38   1      extern uint8_t times10Flag;
  39   1        unsigned char i;
  40   1        uint8_t ab = 0;
  41   1        uint16_t a,b,c,d,e,f,g=0;
  42   1        extern double VDD_Voltage;
  43   1        extern  uint8_t                 lcd_ram[34];    
  44   1        
  45   1      #ifdef LVD_RST_ENABLE
  46   1        LVDCON = 0xE1;          //设置LVD复位电压为2V
  47   1      #endif  
  48   1        
  49   1      #if (SYSCLK_SRC == PLL)
                Sys_Clk_Set_PLL(PLL_Multiple);  //设置系统时钟为PLL，PLL_Multiple为倍频倍数
C51 COMPILER V9.60.0.0   MAIN                                                              07/11/2023 21:13:54 PAGE 2   

              #endif
  52   1        
  53   1      #ifdef UART0_EN
                Zigbee_GPIO_init();   
                Uart0_Initial(UART0_BAUTRATE);  //初始化UART0
              #endif
  57   1        
  58   1      #ifdef UART1_EN
  59   1        Uart1_Initial(UART1_BAUTRATE);  //初始化UART1
  60   1      #endif
  61   1      
  62   1      #ifdef UART2_EN
                Uart2_Initial(UART2_BAUTRATE);  //初始化UART2
              #endif
  65   1      
  66   1        EA = 1;                         //开全局中断
  67   1      
  68   1      #ifdef PRINT_EN
  69   1        uart_printf("LCD Power Saving Mode Demo Code\n");
  70   1      #endif
  71   1      
  72   1        
  73   1      //  P72F = P72_XOSCL_IN_SETTING;      //设置P72为晶振引脚
  74   1      //  P71F = P71_XOSCL_OUT_SETTING;     //设置P71为晶振引脚
  75   1      //  CKCON |= XLCKE;             //使能XSOCL
  76   1      //  while(!(CKCON & XLSTA));        //等待XSOCL稳定
  77   1      //  
  78   1      ////  CKCON |= ILCKE;             //使能IRCL
  79   1      
  80   1      //  LXDIVH = 0;       //设置LCD时钟分频，目标帧频率为64HZ
  81   1      //  LXDIVL = 0; 
  82   1      //  LXCAD = 0;
  83   1      //  LXCFG =  DMOD(DMOD_5ua) | BIAS(BIAS_1_3) | LDRV(LDRV_7);      //设置LCD驱动电流、偏压(bias)、辉度
  84   1      //  LXCON =  LEN(LEN_XOSCL) | LMOD(LMOD_lcd);             //设置LCD时钟源为XOSCL，选择LCD模式
  85   1      ////  LXCON =  LEN(LEN_IRCL) | LMOD(LMOD_lcd);              //设置LCD时钟源为IRCL，选择LCD模式
  86   1      //  
  87   1      //  //设置LCD全显
  88   1      //  for(i = 0; i < 9; i++)
  89   1      //  {
  90   1      //    INDEX = i;
  91   1      //    LXDAT = 0xFF;
  92   1      //  }
  93   1      
  94   1      ////  LCD_Off();
  95   1      //  
  96   1      //  I2CCON = 0;           //关闭I2C，否则系统时钟无法关闭
  97   1      //  CKCON = XLCKE;          //关闭除LCD时钟外的其他时钟
  98   1      ////  CKCON = ILCKE;  
  99   1      //  PWCON &= ~0x08;         //LDO进入低功率模式
 100   1      //  
 101   1      //  PCON = (PCON&0x84) | 0x02;      //进入STOP模式
 102   1      //  _nop_();
 103   1      //  _nop_();
 104   1      //  _nop_();
 105   1      GXHTC3_INIT();  
 106   1      PWM6_init();
 107   1      GPIO_init();
 108   1      KEY_init();
 109   1      INT2_Init();
 110   1      INT3_Init();
 111   1      INT4_Init();
 112   1      INT5_Init();
C51 COMPILER V9.60.0.0   MAIN                                                              07/11/2023 21:13:54 PAGE 3   

 113   1      RTC_init();
 114   1      ADC_init();
 115   1      RTC_Set(2023,7,11,12,04,41);
 116   1      Lcd_init();
 117   1      
 118   1      //zigbee_protocol_init();
 119   1      
 120   1      //mcu_exit_zigbee();
 121   1        while(1)
 122   1        {
 123   2      //    zigbee_uart_service();
 124   2      //    PWMEN  = (1<<PWM_CH6);    //PWM6使能    
 125   2      //    Delay_ms(10);
 126   2      //    PWMEN  = ~(1<<PWM_CH6);   //PWM6禁用  
 127   2      //    Delay_ms(1000); 
 128   2      //      Uart0_PutChar(0x55);
 129   2      //      Uart0_PutChar(0xaa);
 130   2      //      Uart0_PutChar(0x00);
 131   2      //      Uart0_PutChar(0x04);  
 132   2      //      Uart0_PutChar(0x00);
 133   2      //      Uart0_PutChar(0x00);  
 134   2      //      Uart0_PutChar(0x03);      
 135   2      //      mcu_network_start();
 136   2          if(times10Flag ==1)
 137   2          {
 138   3            times10Flag = 0;
 139   3            Key_Scanf();
 140   3          }
 141   2      //    if(ab == 0)
 142   2      //      {
 143   2      //        P32F = OUTPUT;          //P32设置为推挽输出模式 
 144   2      //        P32 = 1;
 145   2      //        ab = 1;
 146   2      //      }
 147   2      //      else
 148   2      //      {
 149   2      //        ab = 0;
 150   2      //        P32F = OUTPUT;          //P32设置为推挽输出模式 
 151   2      //        P32 = 0;
 152   2      //      }
 153   2        for(i = 0; i < 34; i++)
 154   2        {
 155   3          INDEX = i;
 156   3          LXDAT = lcd_ram[i];
 157   3        }
 158   2          if(HalfSecFlag) //半秒打印当前时间
 159   2          {
 160   3            HalfSecFlag = 0;
 161   3        #ifdef PRINT_EN
 162   3            RTC_Get();    get_gxth30();
 163   3      //      uart_printf("%d-%d-%d %d:%d:%d ( %d )\n",calendar.w_year,calendar.w_month,calendar.w_date,calendar.ho
             -ur,calendar.min,calendar.sec,calendar.week);  
 164   3            a=calendar.w_year;
 165   3            b=calendar.w_month;   
 166   3            c=calendar.w_date;    
 167   3              d=calendar.week;
 168   3            e=calendar.hour;
 169   3            f=calendar.min;
 170   3            UpdateNixieTubeRAMA(e/10,1);
 171   3            UpdateNixieTubeRAMA(e%10,3);
 172   3            
 173   3            UpdateNixieTubeRAMA(f/10,5);
C51 COMPILER V9.60.0.0   MAIN                                                              07/11/2023 21:13:54 PAGE 4   

 174   3            UpdateNixieTubeRAMA(f%10,7);
 175   3      
 176   3            Lcd_Colon(1);
 177   3            Lcd_IconFunction();
 178   3            Lcd_Humiture();
 179   3            Lcd_DateFunction(calendar.w_year,calendar.w_month,calendar.w_date);
 180   3            g=calendar.sec;
 181   3            uart_printf("%d/%d/%d-[%d]  %d:%d:%d\n",a,b,c,d,e,f,g); 
 182   3      //      mcu_join_zigbee();
 183   3      //      Uart0_PutChar(0x31);
 184   3      //      uart_printf("Current Voltage %f\n",VDD_Voltage);          
 185   3      //  #endif    
 186   3            
 187   3            
 188   3          }
 189   2      /*    
 190   2          if(AlarmEvFlag) //闹钟中断产生时打印
 191   2          {
 192   2            AlarmEvFlag = 0;
 193   2        #ifdef PRINT_EN
 194   2            uart_printf("Alarm event happen!\n"); 
 195   2        #endif    
 196   2          }
 197   2      */    
 198   2        }
 199   1      }
 200          #endif
*** WARNING C316 IN LINE 200 OF source\main.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    454    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----      15
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
